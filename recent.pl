#!/usr/bin/env perl

#
# Reads in a CSV of users by day (generated by Splunk)
# and generates a summary of who accessed kbase for most
# recent day.
#
# Usage: cat visits.cvs | ./recent.pl | pythom -mjson.tool
#

use JSON;
use strict;
use Date::Calc qw(Delta_Days);
use POSIX qw/strftime/;

my $json = JSON->new->allow_nonref;

my %staff;
my $users;

# Read in the Staff list
#
open(E,"kbase-staff.lst") or die "Unable to open KBase Staff list";
while(<E>){
  chomp;
  $staff{$_}=1;
  $users->{$_}->{'staff'}='Y';
}
close E;

# Get all the users from the log and skip over some bogus splunk columns
#
$_=<STDIN>;
chomp;
my @userl=split /,/;
shift @userl;
for my $u (@userl){
  next if defined $staff{$u};
  next if $u eq '"-"';
  next if $u eq 'NULL';
  next if $u =~ '_span';
  next if $u =~ '_spandays';
  $users->{$u}->{'staff'}='N';
}

my $start_date=0;
my $end_date=0;
my $time;
my $counts;
my $recent;

# Get to the end
#
my @list;
my @times;
while(<STDIN>){
  chomp;
  @list=split /,/;
  $time=shift @list;
  $time=~s/"//g;
  push @times,$time;
}

# 
my $i=0;
$start_date=$time unless $start_date ne 0;
my @ul;
$recent->{users}=[];
foreach (@list){
  my $user=$userl[$i];
  $i++;
  # Skip if the user isn't in our good list
  #
  next unless defined $users->{$user};
  next if $_ == 0;
  my $u->{userid}=$user;
  $u->{staff}='false';
  $u->{staff}='true' if defined $staff{$user};
  push $recent->{users},$u;
  #push $recent->{users},$user if ! defined $staff{$user};
  #push $recent->{internal},$user if defined $staff{$user};
}
my $date=strftime('%Y-%m-%dT%H:%s',localtime);
$recent->{meta}->{generated}=$date;
$recent->{meta}->{dataset}= "kbase-daily-user-access",
$recent->{meta}->{description} = "List of users who accessed KBase services during the given time range.";
$recent->{data}->{timerange}->{below}=pop @times;
$recent->{data}->{timerange}->{from}=pop @times;


print $json->encode($recent);

